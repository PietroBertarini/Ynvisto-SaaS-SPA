import { IMonthlyReportsApiModel } from '../Classes/MonthlyTaxReport/MonthlyTaxReport.types';
import { IOperationsHistory } from '../Redux/Services/TaxReports/TaxReports.actions';
import { IParsedOperationsHistory } from '../Components/Pages/MonthlyTaxReport/MonthlyTaxReport.utils';

export const OperationsHistory: IOperationsHistory[] = [
  {
    ticker: 'HGLG11',
    date: '2020-10-10T00:00:00',
    assetType: 'Fii',
    operationType: 'Sale',
    avgCost: 113.32,
    price: 114.32,
    quantity: 100,
    profit: 100,
    volume: 11432,
    isDayTrade: false,
  },
  {
    ticker: 'HGLG11',
    date: '2020-11-10T00:00:00',
    assetType: 'Fii',
    operationType: 'Sale',
    avgCost: 113.32,
    price: 114.32,
    quantity: 100,
    profit: 100,
    volume: 11432,
    isDayTrade: false,
  },
  {
    ticker: 'HGLG11',
    date: '2020-11-11T00:00:00',
    assetType: 'Fii',
    operationType: 'Sale',
    avgCost: 113.32,
    price: 114.32,
    quantity: 100,
    profit: -100,
    volume: 11432,
    isDayTrade: false,
  },
  {
    ticker: 'BOVA11',
    date: '2020-11-12T00:00:00',
    assetType: 'Etf',
    operationType: 'Sale',
    avgCost: 90.0,
    price: 100,
    quantity: 100,
    profit: 1000,
    volume: 10000,
    isDayTrade: false,
  },
  {
    ticker: 'OIBR3',
    date: '2020-11-12T00:00:00',
    assetType: 'Acoes',
    operationType: 'Purchase',
    avgCost: 1,
    price: 0.5,
    quantity: 1000,
    profit: -1000,
    volume: 500,
    isDayTrade: true,
  },
  {
    ticker: 'OIBR3',
    date: '2020-11-12T00:00:00',
    assetType: 'Acoes',
    operationType: 'Purchase',
    avgCost: 1,
    price: 0.5,
    quantity: 1000,
    profit: 3000,
    volume: 500,
    isDayTrade: true,
  },
  {
    ticker: 'OIBR3',
    date: '2020-11-13T00:00:00',
    assetType: 'Acoes',
    operationType: 'Purchase',
    avgCost: 1,
    price: 0.5,
    quantity: 1000,
    profit: 0,
    volume: 500,
    isDayTrade: true,
  },
];

export const ParsedOperationsHistoryOctober: IParsedOperationsHistory[] = [
  {
    date: '2020-10-10T00:00:00',
    operations: [
      {
        ticker: 'HGLG11',
        date: '2020-10-10T00:00:00',
        assetType: 'Fii',
        operationType: 'Sale',
        avgCost: 113.32,
        price: 114.32,
        quantity: 100,
        profit: 100,
        volume: 11432,
        isDayTrade: false,
      },
    ],
  },
];

export const ParsedOperationsHistoryNovember: IParsedOperationsHistory[] = [
  {
    date: '2020-11-10T00:00:00',
    operations: [
      {
        ticker: 'HGLG11',
        date: '2020-11-10T00:00:00',
        assetType: 'Fii',
        operationType: 'Sale',
        avgCost: 113.32,
        price: 114.32,
        quantity: 100,
        profit: 100,
        volume: 11432,
        isDayTrade: false,
      },
    ],
  },
  {
    date: '2020-11-11T00:00:00',
    operations: [
      {
        ticker: 'HGLG11',
        date: '2020-11-11T00:00:00',
        assetType: 'Fii',
        operationType: 'Sale',
        avgCost: 113.32,
        price: 114.32,
        quantity: 100,
        profit: -100,
        volume: 11432,
        isDayTrade: false,
      },
    ],
  },
  {
    date: '2020-11-12T00:00:00',
    operations: [
      {
        ticker: 'OIBR3',
        date: '2020-11-12T00:00:00',
        assetType: 'Acoes',
        operationType: 'Purchase',
        avgCost: 1,
        price: 0.5,
        quantity: 1000,
        profit: 3000,
        volume: 500,
        isDayTrade: true,
      },
      {
        ticker: 'BOVA11',
        date: '2020-11-12T00:00:00',
        assetType: 'Etf',
        operationType: 'Sale',
        avgCost: 90.0,
        price: 100,
        quantity: 100,
        profit: 1000,
        volume: 10000,
        isDayTrade: false,
      },
      {
        ticker: 'OIBR3',
        date: '2020-11-12T00:00:00',
        assetType: 'Acoes',
        operationType: 'Purchase',
        avgCost: 1,
        price: 0.5,
        quantity: 1000,
        profit: -1000,
        volume: 500,
        isDayTrade: true,
      },
    ],
  },
];

export const historyPercentageWithNoProfits = [
  {
    volume: 1142,
    price: 114.32,
    quantity: 240,
    avgCost: 113.32,
    date: '2020-11-10T00:00:00',
    ticker: 'HGLG11',
    assetType: 'Fii',
    operationType: 'Sale',
    isDayTrade: false,
    profit: -100,
  },
  {
    volume: 1142,
    price: 114.32,
    quantity: 240,
    avgCost: 113.32,
    date: '2020-11-10T00:00:00',
    ticker: 'HGLG11',
    assetType: 'Fii',
    operationType: 'Sale',
    isDayTrade: false,
    profit: -789,
  },
];

export const historyPercentageWithNoLosses = [
  {
    volume: 1142,
    price: 114.32,
    quantity: 240,
    avgCost: 113.32,
    date: '2020-11-10T00:00:00',
    ticker: 'HGLG11',
    assetType: 'Fii',
    operationType: 'Sale',
    isDayTrade: false,
    profit: 100,
  },
  {
    volume: 1142,
    price: 114.32,
    quantity: 240,
    avgCost: 113.32,
    date: '2020-11-10T00:00:00',
    ticker: 'HGLG11',
    assetType: 'Fii',
    operationType: 'Sale',
    isDayTrade: false,
    profit: 789,
  },
];

export const historyPercentageWithProfitsAndLosses = [
  {
    volume: 1142,
    price: 114.32,
    quantity: 240,
    avgCost: 113.32,
    date: '2020-11-10T00:00:00',
    ticker: 'HGLG11',
    assetType: 'Fii',
    operationType: 'Sale',
    isDayTrade: false,
    profit: -100,
  },
  {
    volume: 1142,
    price: 114.32,
    quantity: 240,
    avgCost: 113.32,
    date: '2020-11-10T00:00:00',
    ticker: 'HGLG11',
    assetType: 'Fii',
    operationType: 'Sale',
    isDayTrade: false,
    profit: -420,
  },
  {
    volume: 1142,
    price: 114.32,
    quantity: 240,
    avgCost: 113.32,
    date: '2020-11-10T00:00:00',
    ticker: 'HGLG11',
    assetType: 'Fii',
    operationType: 'Sale',
    isDayTrade: false,
    profit: 789,
  },
];

export const ExemptionSaleVolumeMonthlyReportPlus0 :IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 10000,
    totalSaleVolume: 10000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 0,
  fiiReport: {
    profits: 0,
    previousMonthLosses: 0,
    netTaxes: 0,
    taxBase: 0,
  },
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  internationalReport: undefined,
};

export const TaxDetailInfoWithAllData :IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 10000,
    totalSaleVolume: 10000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 0,
    profits: 100,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 0,
  fiiReport: {
    profits: 0,
    previousMonthLosses: 0,
    netTaxes: 0,
    taxBase: 87,
  },
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  internationalReport: undefined,
};

export const TaxDetailInfoOnlyWithDayTrade :IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  dayTradeReport: {
    taxesOwed: 0,
    profits: 65,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 98,
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  internationalReport: undefined,
};

export const TaxDetailInfoWithoutData :IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 200,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 12,
  stockMarketNetTaxes: 0,
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  internationalReport: undefined,
};

export const ExemptionSaleVolumeUsedMonthlyReportlEqual0 :IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 20000,
    totalSaleVolume: 20000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 0,
  fiiReport: {
    profits: 0,
    previousMonthLosses: 0,
    netTaxes: 0,
    taxBase: 0,
  },
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  internationalReport: undefined,
};

export const ExemptionSaleVolumeUsedMonthlyReportLower0:IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 44000,
    totalSaleVolume: 44000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 0,
  fiiReport: {
    profits: 0,
    previousMonthLosses: 0,
    netTaxes: 0,
    taxBase: 0,
  },
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  internationalReport: undefined,
};

export const getReportAll0:IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 10000,
    totalSaleVolume: 10000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 0,
  fiiReport: {
    profits: 0,
    previousMonthLosses: 0,
    netTaxes: 0,
    taxBase: 0,
  },
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  internationalReport: undefined,
};

export const getTaxReportAllHaveValue :IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 20000,
    totalSaleVolume: 44000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 10,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 100,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 110,
  fiiReport: {
    profits: 0,
    previousMonthLosses: 0,
    netTaxes: 1000,
    taxBase: 0,
  },
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 10000,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 100000,
  },
  internationalReport: undefined,
};

export const getTaxReport2Value:IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 20000,
    totalSaleVolume: 20000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 10,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 100,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 110,
  fiiReport: {
    profits: 0,
    previousMonthLosses: 0,
    netTaxes: 0,
    taxBase: 0,
  },
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  internationalReport: undefined,
};

export const getTaxReportRestValue :IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 20000,
    totalSaleVolume: 44000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 0,
  fiiReport: {
    profits: 0,
    previousMonthLosses: 0,
    netTaxes: 1000,
    taxBase: 0,
  },
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 10000,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 100000,
  },
  internationalReport: undefined,
};

export const getTaxReportDarfValue :IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 111009,
  darfPayableTaxes: 111009,
  darfCurrentMonthTaxes: 111000,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 20000,
    totalSaleVolume: 44000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 0,
  fiiReport: {
    profits: 0,
    previousMonthLosses: 0,
    netTaxes: 1000,
    taxBase: 0,
  },
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 10000,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 100000,
  },
  internationalReport: undefined,
};

export const getProfitReportAllHaveValue :IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 20000,
    totalSaleVolume: 44000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 0,
    profits: 10,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 0,
    profits: 100,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 200,
  fiiReport: {
    profits: 1000,
    previousMonthLosses: 0,
    netTaxes: 0,
    taxBase: 0,
  },
  cryptoReport: {
    profits: 10000,
    saleVolume: 0,
    taxesOwed: 0,
  },
  subscriptionRightReport: {
    profits: 100000,
    saleVolume: 0,
    taxesOwed: 0,
  },
  internationalReport: undefined,
};

export const getProfitReport2Value:IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 20000,
    totalSaleVolume: 20000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 0,
    profits: 10,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 0,
    profits: 100,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 200,
  fiiReport: {
    profits: 0,
    previousMonthLosses: 0,
    netTaxes: 0,
    taxBase: 0,
  },
  cryptoReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  subscriptionRightReport: {
    profits: 0,
    saleVolume: 0,
    taxesOwed: 0,
  },
  internationalReport: undefined,
};

export const getProfitReportaRestValue :IMonthlyReportsApiModel = {
  date: '2015-02-25T00:00:00',
  darfPaymentId: null,
  accumulatedDarfTaxes: 0,
  darfPayableTaxes: 0,
  darfCurrentMonthTaxes: 0,
  commonOpsReport: {
    stocksExemptionSaleVolumeUsed: 20000,
    totalSaleVolume: 44000,
    stockExemptionSaleThreshold: 20000,
    taxOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  dayTradeReport: {
    taxesOwed: 0,
    profits: 0,
    previousMonthLosses: 0,
    irrf: 0,
    irrfToCompensate: 0,
    taxableProfits: 0,
    taxBase: 0,
  },
  stockMarketNetTaxes: 0,
  fiiReport: {
    profits: 1000,
    previousMonthLosses: 0,
    netTaxes: 0,
    taxBase: 0,
  },
  cryptoReport: {
    profits: 10000,
    saleVolume: 0,
    taxesOwed: 0,
  },
  subscriptionRightReport: {
    profits: 100000,
    saleVolume: 0,
    taxesOwed: 0,
  },
  internationalReport: undefined,
};

// TODO: Add example of DARF paid and use it in the same places where the rest is being used
