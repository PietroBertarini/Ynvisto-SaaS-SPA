// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown component tests Renders TopBarDropdown component and match to previously snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <TopBarDropdown
    actionType="CHANGE_ACTIVE_WALLET"
    activeState="activeState"
    iconPath={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      }
    }
    options={
      Array [
        "option1",
        "option2",
        "option3",
      ]
    }
    tooltip="toolTipOption"
  >
    <div>
      <WithStyles(ForwardRef(List))
        aria-label="Device settings"
        className="makeStyles-list-1"
        component="nav"
      >
        <ForwardRef(List)
          aria-label="Device settings"
          className="makeStyles-list-1"
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
          component="nav"
        >
          <nav
            aria-label="Device settings"
            className="MuiList-root makeStyles-list-1 MuiList-padding"
          >
            <WithStyles(ForwardRef(Tooltip))
              title="toolTipOption"
            >
              <ForwardRef(Tooltip)
                classes={
                  Object {
                    "arrow": "MuiTooltip-arrow",
                    "popper": "MuiTooltip-popper",
                    "popperArrow": "MuiTooltip-popperArrow",
                    "popperInteractive": "MuiTooltip-popperInteractive",
                    "tooltip": "MuiTooltip-tooltip",
                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                    "touch": "MuiTooltip-touch",
                  }
                }
                title="toolTipOption"
              >
                <Styled(WithStyles(ForwardRef(ListItem)))
                  aria-controls="lock-menu"
                  aria-describedby={null}
                  aria-haspopup="true"
                  button={true}
                  className=""
                  disableGutters={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseLeave={[Function]}
                  onMouseOver={[Function]}
                  onTouchEnd={[Function]}
                  onTouchStart={[Function]}
                  title="toolTipOption"
                >
                  <WithStyles(ForwardRef(ListItem))
                    aria-controls="lock-menu"
                    aria-describedby={null}
                    aria-haspopup="true"
                    button={true}
                    className="WithStyles(ForwardRef(ListItem))-root-3"
                    disableGutters={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseLeave={[Function]}
                    onMouseOver={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                    title="toolTipOption"
                  >
                    <ForwardRef(ListItem)
                      aria-controls="lock-menu"
                      aria-describedby={null}
                      aria-haspopup="true"
                      button={true}
                      className="WithStyles(ForwardRef(ListItem))-root-3"
                      classes={
                        Object {
                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                          "button": "MuiListItem-button",
                          "container": "MuiListItem-container",
                          "dense": "MuiListItem-dense",
                          "disabled": "Mui-disabled",
                          "divider": "MuiListItem-divider",
                          "focusVisible": "Mui-focusVisible",
                          "gutters": "MuiListItem-gutters",
                          "root": "MuiListItem-root",
                          "secondaryAction": "MuiListItem-secondaryAction",
                          "selected": "Mui-selected",
                        }
                      }
                      disableGutters={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      title="toolTipOption"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        aria-controls="lock-menu"
                        aria-describedby={null}
                        aria-haspopup="true"
                        className="MuiListItem-root WithStyles(ForwardRef(ListItem))-root-3 MuiListItem-button"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseLeave={[Function]}
                        onMouseOver={[Function]}
                        onTouchEnd={[Function]}
                        onTouchStart={[Function]}
                        title="toolTipOption"
                      >
                        <ForwardRef(ButtonBase)
                          aria-controls="lock-menu"
                          aria-describedby={null}
                          aria-haspopup="true"
                          className="MuiListItem-root WithStyles(ForwardRef(ListItem))-root-3 MuiListItem-button"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseLeave={[Function]}
                          onMouseOver={[Function]}
                          onTouchEnd={[Function]}
                          onTouchStart={[Function]}
                          title="toolTipOption"
                        >
                          <div
                            aria-controls="lock-menu"
                            aria-describedby={null}
                            aria-disabled={false}
                            aria-haspopup="true"
                            className="MuiButtonBase-root MuiListItem-root WithStyles(ForwardRef(ListItem))-root-3 MuiListItem-button"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseOver={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                            title="toolTipOption"
                          >
                            <WithStyles(ForwardRef(SvgIcon))
                              className="makeStyles-icon-2"
                              component={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                }
                              }
                              key=".0"
                              viewBox="0 0 600 476.6"
                            >
                              <ForwardRef(SvgIcon)
                                className="makeStyles-icon-2"
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                                component={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  }
                                }
                                viewBox="0 0 600 476.6"
                              >
                                <ForwardRef(SvgWhiteWallet)
                                  aria-hidden={true}
                                  className="MuiSvgIcon-root makeStyles-icon-2"
                                  focusable="false"
                                  viewBox="0 0 600 476.6"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root makeStyles-icon-2"
                                    focusable="false"
                                    viewBox="0 0 600 476.6"
                                  >
                                    whiteWallet.svg
                                  </svg>
                                </ForwardRef(SvgWhiteWallet)>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                            <Styled(WithStyles(ForwardRef(ListItemText)))
                              key=".1"
                              secondary="activeState"
                            >
                              <WithStyles(ForwardRef(ListItemText))
                                className="WithStyles(ForwardRef(ListItemText))-root-4"
                                secondary="activeState"
                              >
                                <ForwardRef(ListItemText)
                                  className="WithStyles(ForwardRef(ListItemText))-root-4"
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense",
                                      "inset": "MuiListItemText-inset",
                                      "multiline": "MuiListItemText-multiline",
                                      "primary": "MuiListItemText-primary",
                                      "root": "MuiListItemText-root",
                                      "secondary": "MuiListItemText-secondary",
                                    }
                                  }
                                  secondary="activeState"
                                >
                                  <div
                                    className="MuiListItemText-root WithStyles(ForwardRef(ListItemText))-root-4"
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      className="MuiListItemText-secondary"
                                      color="textSecondary"
                                      display="block"
                                      variant="body2"
                                    >
                                      <ForwardRef(Typography)
                                        className="MuiListItemText-secondary"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        color="textSecondary"
                                        display="block"
                                        variant="body2"
                                      >
                                        <p
                                          className="MuiTypography-root MuiListItemText-secondary MuiTypography-body2 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                                        >
                                          activeState
                                        </p>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </ForwardRef(ListItemText)>
                              </WithStyles(ForwardRef(ListItemText))>
                            </Styled(WithStyles(ForwardRef(ListItemText)))>
                            <Styled(WithStyles(ForwardRef(Typography)))
                              key=".2"
                            >
                              <WithStyles(ForwardRef(Typography))
                                className="WithStyles(ForwardRef(Typography))-root-5"
                              >
                                <ForwardRef(Typography)
                                  className="WithStyles(ForwardRef(Typography))-root-5"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                >
                                  <p
                                    className="MuiTypography-root WithStyles(ForwardRef(Typography))-root-5 MuiTypography-body1"
                                  >
                                    ⌄
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </Styled(WithStyles(ForwardRef(Typography)))>
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(ListItem)>
                  </WithStyles(ForwardRef(ListItem))>
                </Styled(WithStyles(ForwardRef(ListItem)))>
                <ForwardRef(Popper)
                  anchorEl={
                    <div
                      aria-controls="lock-menu"
                      aria-disabled="false"
                      aria-haspopup="true"
                      class="MuiButtonBase-root MuiListItem-root WithStyles(ForwardRef(ListItem))-root-3 MuiListItem-button"
                      role="button"
                      tabindex="0"
                      title="toolTipOption"
                    >
                      <svg
                        aria-hidden="true"
                        class="MuiSvgIcon-root makeStyles-icon-2"
                        focusable="false"
                        viewBox="0 0 600 476.6"
                      >
                        whiteWallet.svg
                      </svg>
                      <div
                        class="MuiListItemText-root WithStyles(ForwardRef(ListItemText))-root-4"
                      >
                        <p
                          class="MuiTypography-root MuiListItemText-secondary MuiTypography-body2 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                        >
                          activeState
                        </p>
                      </div>
                      <p
                        class="MuiTypography-root WithStyles(ForwardRef(Typography))-root-5 MuiTypography-body1"
                      >
                        ⌄
                      </p>
                      <span
                        class="MuiTouchRipple-root"
                      />
                    </div>
                  }
                  className="MuiTooltip-popper"
                  id={null}
                  open={false}
                  placement="bottom"
                  popperOptions={
                    Object {
                      "modifiers": Object {
                        "arrow": Object {
                          "element": null,
                          "enabled": false,
                        },
                      },
                    }
                  }
                  transition={true}
                />
              </ForwardRef(Tooltip)>
            </WithStyles(ForwardRef(Tooltip))>
          </nav>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
      <Styled(WithStyles(ForwardRef(Menu)))
        anchorEl={null}
        id="lock-menu"
        keepMounted={true}
        onClose={[Function]}
        open={false}
      >
        <WithStyles(ForwardRef(Menu))
          anchorEl={null}
          className="WithStyles(ForwardRef(Menu))-root-6"
          id="lock-menu"
          keepMounted={true}
          onClose={[Function]}
          open={false}
        >
          <ForwardRef(Menu)
            anchorEl={null}
            className="WithStyles(ForwardRef(Menu))-root-6"
            classes={
              Object {
                "list": "MuiMenu-list",
                "paper": "MuiMenu-paper",
              }
            }
            id="lock-menu"
            keepMounted={true}
            onClose={[Function]}
            open={false}
          >
            <WithStyles(ForwardRef(Popover))
              PaperProps={
                Object {
                  "classes": Object {
                    "root": "MuiMenu-paper",
                  },
                }
              }
              anchorEl={null}
              anchorOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              className="WithStyles(ForwardRef(Menu))-root-6"
              getContentAnchorEl={[Function]}
              id="lock-menu"
              keepMounted={true}
              onClose={[Function]}
              onEntering={[Function]}
              open={false}
              transformOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              transitionDuration="auto"
            >
              <ForwardRef(Popover)
                PaperProps={
                  Object {
                    "classes": Object {
                      "root": "MuiMenu-paper",
                    },
                  }
                }
                anchorEl={null}
                anchorOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
                className="WithStyles(ForwardRef(Menu))-root-6"
                classes={
                  Object {
                    "paper": "MuiPopover-paper",
                    "root": "MuiPopover-root",
                  }
                }
                getContentAnchorEl={[Function]}
                id="lock-menu"
                keepMounted={true}
                onClose={[Function]}
                onEntering={[Function]}
                open={false}
                transformOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
                transitionDuration="auto"
              >
                <ForwardRef(Modal)
                  BackdropProps={
                    Object {
                      "invisible": true,
                    }
                  }
                  className="MuiPopover-root WithStyles(ForwardRef(Menu))-root-6"
                  id="lock-menu"
                  keepMounted={true}
                  onClose={[Function]}
                  open={false}
                >
                  <ForwardRef(Portal)
                    disablePortal={false}
                  >
                    <Portal
                      containerInfo={
                        <body>
                          <div
                            aria-hidden="true"
                            class="MuiPopover-root WithStyles(ForwardRef(Menu))-root-6"
                            id="lock-menu"
                            role="presentation"
                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                          >
                            <div
                              data-test="sentinelStart"
                              tabindex="0"
                            />
                            <div
                              class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                              style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                              tabindex="-1"
                            >
                              <ul
                                class="MuiList-root MuiMenu-list MuiList-padding"
                                role="menu"
                                tabindex="-1"
                              >
                                <li
                                  aria-disabled="false"
                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                  role="menuitem"
                                  tabindex="-1"
                                >
                                  option1
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </li>
                                <li
                                  aria-disabled="false"
                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 Mui-selected MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-selected"
                                  role="menuitem"
                                  tabindex="0"
                                >
                                  option2
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </li>
                                <li
                                  aria-disabled="false"
                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                  role="menuitem"
                                  tabindex="-1"
                                >
                                  option3
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </li>
                              </ul>
                            </div>
                            <div
                              data-test="sentinelEnd"
                              tabindex="0"
                            />
                          </div>
                        </body>
                      }
                    >
                      <div
                        className="MuiPopover-root WithStyles(ForwardRef(Menu))-root-6"
                        id="lock-menu"
                        onKeyDown={[Function]}
                        role="presentation"
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "fixed",
                            "right": 0,
                            "top": 0,
                            "visibility": "hidden",
                            "zIndex": 1300,
                          }
                        }
                      >
                        <ForwardRef(SimpleBackdrop)
                          invisible={true}
                          onClick={[Function]}
                          open={false}
                        />
                        <Unstable_TrapFocus
                          disableAutoFocus={false}
                          disableEnforceFocus={false}
                          disableRestoreFocus={false}
                          getDoc={[Function]}
                          isEnabled={[Function]}
                          open={false}
                        >
                          <div
                            data-test="sentinelStart"
                            tabIndex={0}
                          />
                          <ForwardRef(Grow)
                            appear={true}
                            in={false}
                            onEnter={[Function]}
                            onEntering={[Function]}
                            onExited={[Function]}
                            tabIndex="-1"
                            timeout="auto"
                          >
                            <Transition
                              addEndListener={[Function]}
                              appear={true}
                              enter={true}
                              exit={true}
                              in={false}
                              mountOnEnter={false}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              tabIndex="-1"
                              timeout={null}
                              unmountOnExit={false}
                            >
                              <WithStyles(ForwardRef(Paper))
                                className="MuiPopover-paper"
                                classes={
                                  Object {
                                    "root": "MuiMenu-paper",
                                  }
                                }
                                elevation={8}
                                style={
                                  Object {
                                    "opacity": 0,
                                    "transform": "scale(0.75, 0.5625)",
                                    "visibility": "hidden",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <ForwardRef(Paper)
                                  className="MuiPopover-paper"
                                  classes={
                                    Object {
                                      "elevation0": "MuiPaper-elevation0",
                                      "elevation1": "MuiPaper-elevation1",
                                      "elevation10": "MuiPaper-elevation10",
                                      "elevation11": "MuiPaper-elevation11",
                                      "elevation12": "MuiPaper-elevation12",
                                      "elevation13": "MuiPaper-elevation13",
                                      "elevation14": "MuiPaper-elevation14",
                                      "elevation15": "MuiPaper-elevation15",
                                      "elevation16": "MuiPaper-elevation16",
                                      "elevation17": "MuiPaper-elevation17",
                                      "elevation18": "MuiPaper-elevation18",
                                      "elevation19": "MuiPaper-elevation19",
                                      "elevation2": "MuiPaper-elevation2",
                                      "elevation20": "MuiPaper-elevation20",
                                      "elevation21": "MuiPaper-elevation21",
                                      "elevation22": "MuiPaper-elevation22",
                                      "elevation23": "MuiPaper-elevation23",
                                      "elevation24": "MuiPaper-elevation24",
                                      "elevation3": "MuiPaper-elevation3",
                                      "elevation4": "MuiPaper-elevation4",
                                      "elevation5": "MuiPaper-elevation5",
                                      "elevation6": "MuiPaper-elevation6",
                                      "elevation7": "MuiPaper-elevation7",
                                      "elevation8": "MuiPaper-elevation8",
                                      "elevation9": "MuiPaper-elevation9",
                                      "outlined": "MuiPaper-outlined",
                                      "root": "MuiPaper-root MuiMenu-paper",
                                      "rounded": "MuiPaper-rounded",
                                    }
                                  }
                                  elevation={8}
                                  style={
                                    Object {
                                      "opacity": 0,
                                      "transform": "scale(0.75, 0.5625)",
                                      "visibility": "hidden",
                                    }
                                  }
                                  tabIndex="-1"
                                >
                                  <div
                                    className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                    style={
                                      Object {
                                        "opacity": 0,
                                        "transform": "scale(0.75, 0.5625)",
                                        "visibility": "hidden",
                                      }
                                    }
                                    tabIndex="-1"
                                  >
                                    <ForwardRef(MenuList)
                                      actions={
                                        Object {
                                          "current": Object {
                                            "adjustStyleForScrollbar": [Function],
                                          },
                                        }
                                      }
                                      autoFocus={false}
                                      autoFocusItem={false}
                                      className="MuiMenu-list"
                                      onKeyDown={[Function]}
                                      variant="selectedMenu"
                                    >
                                      <WithStyles(ForwardRef(List))
                                        className="MuiMenu-list"
                                        onKeyDown={[Function]}
                                        role="menu"
                                        tabIndex={-1}
                                      >
                                        <ForwardRef(List)
                                          className="MuiMenu-list"
                                          classes={
                                            Object {
                                              "dense": "MuiList-dense",
                                              "padding": "MuiList-padding",
                                              "root": "MuiList-root",
                                              "subheader": "MuiList-subheader",
                                            }
                                          }
                                          onKeyDown={[Function]}
                                          role="menu"
                                          tabIndex={-1}
                                        >
                                          <ul
                                            className="MuiList-root MuiMenu-list MuiList-padding"
                                            onKeyDown={[Function]}
                                            role="menu"
                                            tabIndex={-1}
                                          >
                                            <Styled(WithStyles(ForwardRef(MenuItem)))
                                              key=".$.$option1"
                                              onClick={[Function]}
                                              selected={false}
                                            >
                                              <WithStyles(ForwardRef(MenuItem))
                                                className="WithStyles(ForwardRef(MenuItem))-root-7"
                                                onClick={[Function]}
                                                selected={false}
                                              >
                                                <ForwardRef(MenuItem)
                                                  className="WithStyles(ForwardRef(MenuItem))-root-7"
                                                  classes={
                                                    Object {
                                                      "dense": "MuiMenuItem-dense",
                                                      "gutters": "MuiMenuItem-gutters",
                                                      "root": "MuiMenuItem-root",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  selected={false}
                                                >
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    className="MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters"
                                                    classes={
                                                      Object {
                                                        "dense": "MuiMenuItem-dense",
                                                      }
                                                    }
                                                    component="li"
                                                    disableGutters={false}
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    selected={false}
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      className="MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters"
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      component="li"
                                                      disableGutters={false}
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      selected={false}
                                                      tabIndex={-1}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        component="li"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="li"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          role="menuitem"
                                                          tabIndex={-1}
                                                        >
                                                          <li
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="menuitem"
                                                            tabIndex={-1}
                                                          >
                                                            option1
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </li>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                </ForwardRef(MenuItem)>
                                              </WithStyles(ForwardRef(MenuItem))>
                                            </Styled(WithStyles(ForwardRef(MenuItem)))>
                                            <Styled(WithStyles(ForwardRef(MenuItem)))
                                              key=".$.$option2"
                                              onClick={[Function]}
                                              selected={true}
                                              tabIndex={0}
                                            >
                                              <WithStyles(ForwardRef(MenuItem))
                                                className="WithStyles(ForwardRef(MenuItem))-root-7"
                                                onClick={[Function]}
                                                selected={true}
                                                tabIndex={0}
                                              >
                                                <ForwardRef(MenuItem)
                                                  className="WithStyles(ForwardRef(MenuItem))-root-7"
                                                  classes={
                                                    Object {
                                                      "dense": "MuiMenuItem-dense",
                                                      "gutters": "MuiMenuItem-gutters",
                                                      "root": "MuiMenuItem-root",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  selected={true}
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    className="MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 Mui-selected MuiMenuItem-gutters"
                                                    classes={
                                                      Object {
                                                        "dense": "MuiMenuItem-dense",
                                                      }
                                                    }
                                                    component="li"
                                                    disableGutters={false}
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    selected={true}
                                                    tabIndex={0}
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      className="MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 Mui-selected MuiMenuItem-gutters"
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      component="li"
                                                      disableGutters={false}
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      selected={true}
                                                      tabIndex={0}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 Mui-selected MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-selected"
                                                        component="li"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        role="menuitem"
                                                        tabIndex={0}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 Mui-selected MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-selected"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="li"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          role="menuitem"
                                                          tabIndex={0}
                                                        >
                                                          <li
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 Mui-selected MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-selected"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="menuitem"
                                                            tabIndex={0}
                                                          >
                                                            option2
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </li>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                </ForwardRef(MenuItem)>
                                              </WithStyles(ForwardRef(MenuItem))>
                                            </Styled(WithStyles(ForwardRef(MenuItem)))>
                                            <Styled(WithStyles(ForwardRef(MenuItem)))
                                              key=".$.$option3"
                                              onClick={[Function]}
                                              selected={false}
                                            >
                                              <WithStyles(ForwardRef(MenuItem))
                                                className="WithStyles(ForwardRef(MenuItem))-root-7"
                                                onClick={[Function]}
                                                selected={false}
                                              >
                                                <ForwardRef(MenuItem)
                                                  className="WithStyles(ForwardRef(MenuItem))-root-7"
                                                  classes={
                                                    Object {
                                                      "dense": "MuiMenuItem-dense",
                                                      "gutters": "MuiMenuItem-gutters",
                                                      "root": "MuiMenuItem-root",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  selected={false}
                                                >
                                                  <WithStyles(ForwardRef(ListItem))
                                                    button={true}
                                                    className="MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters"
                                                    classes={
                                                      Object {
                                                        "dense": "MuiMenuItem-dense",
                                                      }
                                                    }
                                                    component="li"
                                                    disableGutters={false}
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    selected={false}
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ListItem)
                                                      button={true}
                                                      className="MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters"
                                                      classes={
                                                        Object {
                                                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                          "button": "MuiListItem-button",
                                                          "container": "MuiListItem-container",
                                                          "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                          "disabled": "Mui-disabled",
                                                          "divider": "MuiListItem-divider",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "gutters": "MuiListItem-gutters",
                                                          "root": "MuiListItem-root",
                                                          "secondaryAction": "MuiListItem-secondaryAction",
                                                          "selected": "Mui-selected",
                                                        }
                                                      }
                                                      component="li"
                                                      disableGutters={false}
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      selected={false}
                                                      tabIndex={-1}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        component="li"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="li"
                                                          disabled={false}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          role="menuitem"
                                                          tabIndex={-1}
                                                        >
                                                          <li
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root WithStyles(ForwardRef(MenuItem))-root-7 MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="menuitem"
                                                            tabIndex={-1}
                                                          >
                                                            option3
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </li>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                </ForwardRef(MenuItem)>
                                              </WithStyles(ForwardRef(MenuItem))>
                                            </Styled(WithStyles(ForwardRef(MenuItem)))>
                                          </ul>
                                        </ForwardRef(List)>
                                      </WithStyles(ForwardRef(List))>
                                    </ForwardRef(MenuList)>
                                  </div>
                                </ForwardRef(Paper)>
                              </WithStyles(ForwardRef(Paper))>
                            </Transition>
                          </ForwardRef(Grow)>
                          <div
                            data-test="sentinelEnd"
                            tabIndex={0}
                          />
                        </Unstable_TrapFocus>
                      </div>
                    </Portal>
                  </ForwardRef(Portal)>
                </ForwardRef(Modal)>
              </ForwardRef(Popover)>
            </WithStyles(ForwardRef(Popover))>
          </ForwardRef(Menu)>
        </WithStyles(ForwardRef(Menu))>
      </Styled(WithStyles(ForwardRef(Menu)))>
    </div>
  </TopBarDropdown>
</Provider>
`;
